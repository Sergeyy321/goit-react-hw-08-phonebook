{"version":3,"file":"static/js/446.331682d5.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/FIlter.styled.jsx","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","pages/Phonebook/Phonebook.styled.js","pages/Phonebook/Phonebooks.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import styled from 'styled-components'; \n\n\nexport const PhonebookStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\n\nexport const Input = styled.input`\n  width: 150px;\n  border-radius: 5px;\n  \n  border: 1px solid #000000;\n  padding: 2px;\n`;\n\nexport const Btn = styled.button`\n  padding: 10px;\n  margin: 15px;\n  border-radius: 5px;\nbackground-color: #ff0000;\n  border: 2px solid #ff0000;\n  margin-top: 20px;\n\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport {Btn,Input,PhonebookStyled} from 'components/Phonebook/Phonebook.styled'\nexport const Phonebook = () => {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const inputValue = form.elements.text.value;\n    const contactExists = contacts.find(\n      contact => contact.name.toLowerCase() === inputValue.toLowerCase()\n    );\n    if (contactExists) {\n      alert(`${inputValue} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: inputValue,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <PhonebookStyled>\n       \n        <Input\n          placeholder='name'\n          type=\"text\"\n          name=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </PhonebookStyled>\n      <div >\n     \n        <Input\n        placeholder='phone'\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Btn type=\"submit\">Add contact</Btn>\n    </form>\n  );\n};\n","import styled from 'styled-components'\n\nexport const ContactStyle = styled.div`\n    display:flex;\n    flex-direction:column;\n`","import React from 'react';\nimport { useEffect } from 'react';\nimport { ContactStyle } from './Contacts.styled';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const getContacts = () => {\n    const normalizedValue = filter ? filter.toLowerCase().trim() : '';\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedValue)\n    );\n  };\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n\n  return (\n    <ContactStyle>\n      <ul>\n        {getContacts().map(el => {\n          return (\n            <li key={el.id}>\n              {el.name} {el.number}\n              <button\n                onClick={() => {\n                  dispatch(deleteContact(el.id));\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </ContactStyle>\n  );\n};\n","import styled from 'styled-components';\n\n\n\nexport const Input = styled.input`\n  width: 150px;\n  border-radius: 5px;\n  \n  border: 1px solid black;\n  padding: 2px;\n`;\n","import { Input } from './FIlter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { qwery } from 'redux/sliceFilters';\nimport { selectFilter } from 'redux/selectors';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n  const id = nanoid();\n\n  return (\n    <div>\n      <h2>Find contacts by name</h2>\n      <Input\n        id={id}\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(qwery(evt.target.value))}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </div>\n  );\n};\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   onfilterChange: PropTypes.func.isRequired,\n// };\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { styled } from 'styled-components'\n\nexport const PhonebookStyled = styled.div`\n  \n  background-color: #657cfc;\n`;","import { Phonebook } from 'components/Phonebook/Phonebook';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport {PhonebookStyled} from 'pages/Phonebook/Phonebook.styled.js'\nexport default function Phonebooks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <PhonebookStyled>\n      <h2>Phonebook</h2>\n      <Phonebook />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts /> \n       {isLoading && !error && <Loader />}\n    </PhonebookStyled>\n  );\n}\n\n  //  <ContactStyled>\n  //    <nav></nav>\n\n  //    <Phonebook />\n  //    <div>\n  //      <h2>Contacts</h2>\n  //      <Filter />\n  //  \n  //      <Contacts />\n  //    </div>\n  //  </ContactStyled>;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","PhonebookStyled","styled","div","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","Btn","button","_templateObject3","Phonebook","dispatch","useDispatch","useSelector","_jsxs","onSubmit","event","preventDefault","form","target","inputValue","elements","text","value","find","contact","name","toLowerCase","alert","concat","addContact","number","reset","children","_jsx","placeholder","type","pattern","title","required","ContactStyle","Contacts","useEffect","fetchContacts","normalizedValue","trim","includes","getContacts","map","el","onClick","deleteContact","id","Filter","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","onChange","evt","qwery","Phonebooks","Loader"],"sourceRoot":""}